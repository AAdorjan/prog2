import numpy as np        
import math               
                          
                          
l=np.random.randint(0,100,
setA=set(l)               
                          
minv=np.inf               
maxv=-np.inf              
                          
for i in setA:            
    if i> maxv:           
        maxv=i            
    if i<minv:            
        minv=i            
print(setA)               
print('A min ertek: {} es 
                          
                          
                          
str='* '                  
N=9                       
for i in range(1,N+1):    
    if i <=math.ceil(float
        print(i*str)      
    else:                 
        print((N+1-i)*str)
                          
                              
r=int(input('sor: '))       
c=int(input('sor: '))       
                            
M=np.zeros((r,c))           
for i in range(0,r):        
    for j in range(0,c):    
        M[i,j]=(i+1)*(j+1)  
        
       
       
       
 
 class Pont:
    'Egy matek pont defje'

p1=Pont()

print(p1)
p1.x=3.0
p1.y=4.0
print(p1)
print(p1.x)


class IntegerNum:
    'Az oszaly leirsa'
    def __init__(self,p1):
        self.number=p1
    def doubleNum(self):
        return self.number*2
    def squaerNum(self):
        return self.number**2
    def pow(self,k):
        return self.number**k
    def abs(self):
        if self.number>0:
            return self.number
        elif self.number<0:
            return self.number*-1
        else:
            return 0

n1=IntegerNum(6)
n2=IntegerNum(-8)

print(n1.doubleNum())
print(n2.squaerNum())

class Circle:
    pi=3.14
    f=34
    def __init__(self,r):
        self.radius=IntegerNum(r)
        self.name="Kor"
        self.diameter=IntegerNum(2*r)

    def __str__(self):
        return 'A kor sugara: {}, kerulete: {} es terulete: {}'.format(self.radius.number,self.getPerimeter(),self.getArea())

    def getArea(self):
        return self.radius.squaerNum()*self.pi
    def getPerimeter(self):
        return self.radius.doubleNum()*self.pi


c1=Circle(5)
c2=Circle(8)
print(c1.radius)
print(c2)
print(c1.__str__())
                            
print(M)                    
                                                    
class Mystring:
    def __init__(self):
        self.str=''
    def getstr(self):
        self.str=input("Gimme szoveg:")
    def prints(self):
        print(self.str.upper())

str1="programming"
print(str1.upper())

str2=Mystring()
str2.getstr()
str2.prints()
